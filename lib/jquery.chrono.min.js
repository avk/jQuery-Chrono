var jQueryChrono;(function(a){function c(){var d=jQueryChrono.create_timer.apply(this,arguments);return setTimeout(d.callback,d.when)}function b(){var d=jQueryChrono.create_timer.apply(this,arguments);return setInterval(d.callback,d.when)}a.extend({after:c,every:b})}(jQuery));jQueryChrono=(function(){var c={delay:4,units:"milliseconds"},b=1,f=b*1000,d=f*60,i=d*60,h=i*24;var j={millisecond:b,milliseconds:b,ms:b,second:f,seconds:f,sec:f,secs:f,s:f,minute:d,minutes:d,min:d,mins:d,m:d,hour:i,hours:i,hr:i,hrs:i,h:i,day:h,days:h,d:h};function e(k,l){if(typeof l[0]==="string"){k.delay=parseFloat(l[0],10);if(isNaN(k.delay)){k.delay=(j[l[0]]>b)?1:c.delay}}else{k.delay=l[0]}if(typeof k.delay!=="number"||isNaN(k.delay)){$.error("$.after and $.every - Require a numerical delay as the 1st argument")}return k}function g(k,l){if(typeof l[0]==="string"&&k.delay!==null){k.units=l[0].replace(k.delay,"")||null}if(typeof l[1]==="string"){k.units=l[1]}if(k.units===null&&l.length===2){k.units=c.units}if(typeof j[k.units]!=="number"){$.error("$.after and $.every - Require a valid unit of time as the 2nd argument")}return k}function a(k,l){k.callback=l[l.length-1];if(!$.isFunction(k.callback)){$.error("$.after and $.every - Require a callback as the last argument")}return k}return{defaults:c,valid_units:j,create_timer:function(){var k={delay:null,units:null,when:null,callback:null};if(arguments.length<2||arguments.length>3){$.error("$.after and $.every - Accept only 2 or 3 arguments")}k=e(k,arguments);k=g(k,arguments);k=a(k,arguments);if(k.delay<c.delay&&k.units===c.units){k.delay=c.delay}if(k.delay<0){k.delay=c.delay;k.units=c.units}k.when=k.delay*j[k.units];return k}}}());