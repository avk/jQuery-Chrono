var jQueryChrono;(function(a){function c(){var d=jQueryChrono.create_timer.apply(this,arguments);return setTimeout(d.callback,d.when)}function b(){var d=jQueryChrono.create_timer.apply(this,arguments);return setInterval(d.callback,d.when)}a.extend({after:c,every:b})}(jQuery));jQueryChrono=(function(){var c={delay:4,units:"milliseconds"},b=1,h=b*1000,e=h*60,k=e*60,j=k*24;var l={millisecond:b,milliseconds:b,ms:b,second:h,seconds:h,sec:h,secs:h,s:h,minute:e,minutes:e,min:e,mins:e,m:e,hour:k,hours:k,hr:k,hrs:k,h:k,day:j,days:j,d:j};function f(m,n){if(typeof n[0]==="string"){m.delay=parseFloat(n[0],10);if(isNaN(m.delay)){m.delay=(l[n[0]]>b)?1:c.delay}}else{m.delay=n[0]}if(typeof m.delay!=="number"||isNaN(m.delay)){$.error("$.after and $.every - Require a numerical delay as the 1st argument")}return m}function i(m,n){if(typeof n[0]==="string"&&m.delay!==null){m.units=$.trim(n[0].replace(m.delay,""))||null}if(typeof n[1]==="string"){m.units=n[1]}if(m.units===null&&n.length===2){m.units=c.units}if(typeof l[m.units]!=="number"){$.error("$.after and $.every - Require a valid unit of time as the 2nd argument")}return m}function a(m,n){m.callback=n[n.length-1];if(!$.isFunction(m.callback)){$.error("$.after and $.every - Require a callback as the last argument")}return m}function g(n,q){var p,o,m="",s,r=[];p=(typeof q[0]==="string")?q[0].split(","):[];for(o in p){if(!/\d\s?\w+/.test(p[o])){$.error("$.after and $.every - Invalid delays with units sequence: "+p.join(","))}s=d.call(this,p[o],n.callback);if(m===""||l[s.units]<=l[m]){m=s.units}r[o]=s}n.units=m;for(o in r){n.delay+=r[o].delay*(l[r[o].units]/l[m])}return n}function d(){var m={delay:null,units:null,when:null,callback:null};if(arguments.length<2||arguments.length>3){$.error("$.after and $.every - Accept only 2 or 3 arguments")}m=a(m,arguments);if(typeof arguments[0]==="string"&&arguments[0].search(",")>-1){m=g(m,arguments)}else{m=f(m,arguments);m=i(m,arguments)}if(m.delay<c.delay&&m.units===c.units){m.delay=c.delay}if(m.delay<0){m.delay=c.delay;m.units=c.units}m.when=m.delay*l[m.units];return m}return{defaults:c,valid_units:l,create_timer:function(){return d.apply(this,arguments)}}}());